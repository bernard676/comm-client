import NextAuth from "next-auth/next";
import GoogleProvider from "next-auth/providers/google";
export default NextAuth({
  providers: [
    GoogleProvider({
      clientId: process.env.GOOGLE_CLIENT_ID,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET,
      authorization: {
        params: {
          prompt: "consent",
          access_type: "offline",
          response_type: "code",
        }
      }
    })
  ],
  pages: {
    login: '/index',
  },
  jwt: {
    encryption: true,
    maxAge: 60 * 60 * 24 * 30,
    // You can define your own encode/decode functions for signing and encryption

  },
  secret: process.env.JWT_SECRET,
  callbacks: {
    async signIn({ user, account, profile, email, credentials }) {
      return true;
    },
    async session({ session, token, user, account }) {
      session.account = account;
      session.user = token;
      return session;
    },
    async jwt({ token, user, account = {}, profile, isNewUser }) {
      if (account) {
        token.accessToken = account.access_token;
      }
      if (account.provider && !token[account.provider]) {
        token[account.provider] = {}
      }
      if (account.access_token) {
        token[account.provider].accessToken = account.access_token;
      }
      if (account.refresh_token) {
        token[account.provider].refreshToken = account.refresh_token;
      }
      return token;
    },
  },
})